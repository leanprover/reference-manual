window.docContents[161].resolve({"/releases/v4.13.0/#The-Lean-Language-Reference--Release-Notes--Lean-4___13___0-_LPAR_2024-11-01_RPAR_--Changes-to-CI":{"contents":"* #5343 allows addition of release-ci label via comment (@thorimur)* #5344 sets check level correctly during workflow (@thorimur)* #5444 Mathlib's lean-pr-testing-NNNN branches should use Batteries' lean-pr-testing-NNNN branches* #5489 commit lake-manifest.json when updating lean-pr-testing branches* #5490 use separate secrets for commenting and branching in pr-release.yml\n\n","context":"Lean Reference\u0009Release Notes\u0009Lean 4.13.0 (2024-11-01)","header":"Changes to CI","id":"/releases/v4.13.0/#The-Lean-Language-Reference--Release-Notes--Lean-4___13___0-_LPAR_2024-11-01_RPAR_--Changes-to-CI"},"/releases/v4.19.0/#The-Lean-Language-Reference--Release-Notes--Lean-4___19___0-_LPAR_2025-05-01_RPAR_--Language--Grind":{"contents":"* #7355 fixes a bug in the markNestedProofs preprocessor used in the\ngrind tactic.* #7392 fixes an issue in the grind tactic when case splitting on\nif-then-else expressions.* #7510 ensures that grind can be used as a more powerful\ncontradiction tactic, sparing the user from having to type exfalso; grind or intros; exfalso; grind.* #7512 adds missing normalization rules for Nat div and mod to the\ngrind tactic.* #7514 adds more missing normalization rules for div and mod to\ngrind.* #7532 fixes the procedure for putting new facts into the grind\n\"to-do\" list. It ensures the new facts are preprocessed. also\nremoves some of the clutter in the Nat.sub support.* #7540 adds [grind cases eager] attribute to Subtype. See new test.* #7553 removes a bad normalization rule in grind, and adds a missing\ndsimproc.* #7641 implements basic model-based theory combination in grind.\ngrind can now solve examples such asexample (f : Int → Int) (x : Int)\n    : 0 ≤ x → x ≠ 0 → x ≤ 1 → f x = 2 → f 1 = 2 := by\n  grind\n* #7712 ensures grind always abstract its own proofs into an auxiliary\ndefinition/theorem. This is similar to #5998 but for grind* #7714 fixes an assertion violation in the grind model-based theory\ncombination module.* #7723 adds the configuration options zeta and zetaDelta in\ngrind. Both are set to true by default.* #7724 adds dite_eq_ite normalization rule to grind. This rule is\nimportant to adjust mismatches between a definition and its function\ninduction principle.* #7726 fixes the markNestedProofs procedure used in grind. It was\nmissing the case where the type of a nested proof may contain other\nnested proofs.* #7760 ensures grind is using the default transparency setting when\ncomputing auxiliary congruence lemmas.* #7765 improves how grind normalizes dependent implications during\nintroduction.\nPreviously, grind would introduce a hypothesis h : p for a goal of\nthe form .. ⊢ (h : p) → q h, and then normalize and assert a\nnon-dependent copy of p. As a result, the local context would contain\nboth h : p and a separate h' : p', where p' is the normal form of\np. Moreover, q would still depend on the original h.* #7776 improves the equality proof discharger used by the E-matching\nprocedure in grind.* #7777 fixes the introduction procedure used in grind. It was not\nregistering local instances that are also propositions. See new test.* #7778 adds missing propagation rules for LawfulBEq A to grind.\nThey are needed in a context where the instance DecidableEq A is not\navailable. See new test.* #7781 adds a new propagation rule for Bool disequalities to grind.\nIt now propagates x = true (x = false) from the disequality x = false (x = true). It ensures we don't have to perform case analysis\non x to learn this fact. See tests.\n\n","context":"Lean Reference\u0009Release Notes\u0009Lean 4.19.0 (2025-05-01)\u0009Language","header":"Grind","id":"/releases/v4.19.0/#The-Lean-Language-Reference--Release-Notes--Lean-4___19___0-_LPAR_2025-05-01_RPAR_--Language--Grind"},"/releases/v4.21.0/#The-Lean-Language-Reference--Release-Notes--Lean-4___21___0-_LPAR_2025-06-30_RPAR_--Lake":{"contents":"* #8383 fixes the use of import Lake with precompiled modules, which\nwas previously broken on MacOS.* #8411 fixes a doc bug in the Resolve.lean; in reverse order, B comes\nbefore A* #8528 fixes the heuristic Lake uses to determine whether a lean_lib\ncan be loaded via lean --plugin rather than lean --load-dynlib.\nPreviously, a mismatch between the single root's name and the library's\nname would not be caught and cause loading to fail.* #8529 changes lake lean and lake setup-file to precompile the\nimports of non-workspace files using the the import's whole library.\nThis ensures that additional link objects are linked and available\nduring elaboration.* #8539 changes Lake to use relative path for the Lean messages produced\nby a module build. This makes the message portable across different\nmachines, which is useful for Mathlib's cache.\n\n","context":"Lean Reference\u0009Release Notes\u0009Lean 4.21.0 (2025-06-30)","header":"Lake","id":"/releases/v4.21.0/#The-Lean-Language-Reference--Release-Notes--Lean-4___21___0-_LPAR_2025-06-30_RPAR_--Lake"},"/releases/v4.22.0/#The-Lean-Language-Reference--Release-Notes--Lean-4___22___0-_LPAR_2025-08-14_RPAR_--Server":{"contents":"* #8105 adds support for server-sided RpcRef reuse and fixes a bug\nwhere trace nodes in the InfoView would close while the file was still\nbeing processed.* #8511 implements signature help support. When typing a function\napplication, editors with support for signature help will now display a\npopup that designates the current (remaining) function type. This\nremoves the need to remember the function signature while typing the\nfunction application, or having to constantly cycle between hovering\nover the function identifier and typing the application. In VS Code, the\nsignature help can be triggered manually using Ctrl+Shift+Space.* #8654 adds server-side support for a new module hierarchy component in\nVS Code that can be used to navigate both the import tree of a module\nand the imported-by tree of a module. Specifically, it implements new\nrequests $/lean/prepareModuleHierarchy,\n$/lean/moduleHierarchy/imports and\n$/lean/moduleHierarchy/importedBy. These requests are not supported by\nstandard LSP. Companion PR at\nleanprover/vscode-lean4#620.* #8699 adds support to the server for the new module setup process by\nchanging how lake setup-file is used.* #8868 ensures that code actions do not have to wait for the full file\nto elaborate. This regression was accidentally introduced in #7665.* #9019 fixes a bug where semantic highlighting would only highlight\nkeywords that started with an alphanumeric character. Now, it uses\nLean.isIdFirst.\n\n","context":"Lean Reference\u0009Release Notes\u0009Lean 4.22.0 (2025-08-14)","header":"Server","id":"/releases/v4.22.0/#The-Lean-Language-Reference--Release-Notes--Lean-4___22___0-_LPAR_2025-08-14_RPAR_--Server"}});