window.docContents[217].resolve({"/Basic-Types/Characters/#char-api":{"contents":"\n\n\n\n\n\n\n\n\n\n","context":"Lean Reference\u0009Basic Types\u0009Characters","header":"19.7.4. API Reference","id":"/Basic-Types/Characters/#char-api"},"/Notations-and-Macros/Macros/#macro-attribute":{"contents":"Macros can be manually added to a syntax kind using the macro attribute.\nThis low-level means of specifying macros is typically not useful, except as a result of code generation by macros that themselves generate macro definitions.\n\nThe macro AttributeThe macro attribute specifies that a function is to be considered a macro for the specified syntax kind.\n\nThe Macro Attribute/-- Generate a list based on N syntactic copies of a term -/\nsyntax (name := rep) \"[\" num \" !!! \" term \"]\" : term\n\n@[macro rep]\ndef expandRep : Macro\n  | `([ $n:num !!! $e:term]) =>\n    let e' := Array.mkArray n.getNat e\n    `([$e',*])\n  | _ =>\n    throwUnsupported\nEvaluating this new expression demonstrates that the macro is present.#eval [3 !!! \"hello\"]\n[\"hello\", \"hello\", \"hello\"]\n\n\n","context":"Lean Reference\u0009Notations and Macros\u0009Macros\u0009Defining Macros","header":"20.5.5.3. The Macro Attribute","id":"/Notations-and-Macros/Macros/#macro-attribute"},"/releases/v4.25.0/#The-Lean-Language-Reference--Release-Notes--Lean-4___25___0-rc2-_LPAR_2025-10-22_RPAR_--Lake":{"contents":"* #9855 adds a new allowImportAll configuration option for packages\nand libraries. When enabled by an upstream package or library,\ndownstream packages will be able to import all modules of that package\nor library. This enables package authors to selectively choose which\nprivate elements, if any, downstream packages may have access to.* #10188 adds support for remote artifact caches (e.g., Reservoir) to\nLake. As part of this support, a new suite of lake cache CLI commands\nhas been introduced to help manage Lake's cache. Also, the existing\nlocal cache support has been overhauled for better interplay with the\nnew remote support.* #10452 refactors Lake's package naming procedure to allow packages to\nbe renamed by the consumer. With this, users can now require a package\nusing a different name than the one it was defined with.* #10459 fixes a conditional check in a GitHub Action template generated\nby Lake.* #10468 refactors the Lake log monads to take a LogConfig structure\nwhen run (rather than multiple arguments). This breaking change should\nhelp minimize future breakages due to changes in configurations options.* #10551 enables Reservoir packages to be required as dependencies at a\nspecific package version (i.e., the version specified in the package's\nconfiguration file).* #10576 adds a new package configuration option: restoreAllArtifacts.\nWhen set to true and the Lake local artifact cache is enabled, Lake\nwill copy all cached artifacts into the build directory. This ensures\nthey are available for external consumers who expect build results to be\nin the build directory.* #10578 adds support for the CMake spelling of a build type (i.e.,\ncapitalized) to Lake's buildType configuration option.* #10579 alters libPrefixOnWindows behavior to add the lib prefix to\nthe library's libName rather than just the file path. This means that\nLake's -l will now have the prefix on Windows. While this should not\nmatter to a MSYS2 build (which accepts both lib-prefixed and\nunprefixed variants), it should ensure compatibility with MSVC (if that\nis ever an issue).* #10730 changes the Lake's remote cache interface to scope cache outputs\nby toolchain and/or platform were useful.* #10741 fixes a bug where partially up-to-date files built with --old\ncould be stored in the cache as fully up-to-date. Such files are no\nlonger cached. In addition, builds without traces now only perform an\nmodification time check with --old. Otherwise, they are considered\nout-of-date.\n\n","context":"Lean Reference\u0009Release Notes\u0009Lean 4.25.0-rc2 (2025-10-22)","header":"Lake","id":"/releases/v4.25.0/#The-Lean-Language-Reference--Release-Notes--Lean-4___25___0-rc2-_LPAR_2025-10-22_RPAR_--Lake"}});