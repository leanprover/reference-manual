window.docContents[137].resolve({"/Terms/Pattern-Matching/#The-Lean-Language-Reference--Terms--Pattern-Matching--Types--Pattern-Equality-Proofs":{"contents":"When a discriminant is named, match generates a proof that the pattern and discriminant are equal, binding it to the provided name in the right-hand side.\nThis is useful to bridge the gap between dependent pattern matching on indexed families and APIs that expect explicit propositional arguments, and it can help tactics that make use of assumptions to succeed.\n\nPattern Equality ProofsThe function last?, which either throws an exception or returns the last element of its argument, uses the standard library function List.getLast.\nThis function expects a proof that the list in question is nonempty.\nNaming the match on xs ensures that there's an assumption in scope that states that xs is equal to _ :: _, which simp_all uses to discharge the goal.def last? (xs : List α) : Except String α :=\n  match h : xs with\n  | [] =>\n    .error \"Can't take first element of empty list\"\n  | _ :: _ =>\n    .ok <| xs.getLast (show xs ≠ [] by intro h'; simp_all)\nWithout the name, simp_all is unable to find the contradiction.def last?' (xs : List α) : Except String α :=\n  match xs with\n  | [] =>\n    .error \"Can't take first element of empty list\"\n  | _ :: _ =>\n    .ok <| xs.getLast (show xs ≠ [] by intro h'; simp_all)\nsimp_all made no progress\n\n\n","context":"Lean Reference\u0009Terms\u0009Pattern Matching\u0009Types","header":"10.8.1.1. Pattern Equality Proofs","id":"/Terms/Pattern-Matching/#The-Lean-Language-Reference--Terms--Pattern-Matching--Types--Pattern-Equality-Proofs"},"/releases/v4.19.0/#The-Lean-Language-Reference--Release-Notes--Lean-4___19___0-_LPAR_2025-05-01_RPAR_--Documentation":{"contents":"* #7198 makes the docstrings in the Char namespace follow the\ndocumentation conventions.* #7204 adds docstrings for the Id monad.* #7246 updates existing docstrings for Bool and adds the missing ones.* #7288 fixes the doc of List.removeAll* #7365 updates docstrings and adds some that are missing.* #7452 makes the style of all List docstrings that appear in the\nlanguage reference consistent.* #7476 adds missing docstrings for IO and related code and makes the\nstyle of the existing docstrings consistent.* #7492 adds missing Array docstrings and makes their style\nconsistent.* #7506 adds missing String docstrings and makes the existing ones\nconsistent in style.* #7523 adds missing docstrings and makes docstring style consistent for\nSystem and System.FilePath.* #7528 makes the docstrings for Thunk consistent with the style of\nthe others.* #7534 adds missing Syntax-related docstrings and makes the existing\nones consistent in style with the others.* #7535 revises the docstring for funext, making it more concise and\nadding a reference to the manual for more details.* #7548 adds missing monad transformer docstrings and makes their style\nconsistent.* #7552 adds missing Nat docstrings and makes their style consistent.* #7564 updates the docstrings for ULift and PLift, making their\nstyle consistent with the others.* #7568 adds missing Int docstrings and makes the style of all of them\nconsistent.* #7602 adds missing docstrings for fixed-width integer operations and\nmakes their style consistent.* #7607 adds docstrings for String.drop and String.dropRight.* #7613 adds a variety of docstrings for names that appear in the\nmanual.* #7635 adds missing docstrings for Substring and makes the style of\nSubstring docstrings consistent.* #7642 reviews the docstrings for Float and Float32, adding missing\nones and making their format consistent.* #7645 adds missing docstrings and makes docstring style consistent for\nForM, ForIn, ForIn', ForInStep, IntCast, and NatCast.* #7711 adds the last few missing docstrings that appear in the manual.* #7713 makes the BitVec docstrings match each other and the rest of the\nAPI in style.\n\n","context":"Lean Reference\u0009Release Notes\u0009Lean 4.19.0 (2025-05-01)","header":"Documentation","id":"/releases/v4.19.0/#The-Lean-Language-Reference--Release-Notes--Lean-4___19___0-_LPAR_2025-05-01_RPAR_--Documentation"}});