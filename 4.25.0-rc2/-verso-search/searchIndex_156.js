window.docContents[156].resolve({"/Basic-Types/Strings/#The-Lean-Language-Reference--Basic-Types--Strings--API-Reference--String-Slices--API-Reference":{"contents":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","context":"Lean Reference\u0009Basic Types\u0009Strings\u0009API Reference\u0009String Slices","header":"19.8.4.12.1. API Reference","id":"/Basic-Types/Strings/#The-Lean-Language-Reference--Basic-Types--Strings--API-Reference--String-Slices--API-Reference"},"/Tactic-Proofs/Tactic-Reference/#tactic-ref-inductive":{"contents":"\n\n\n\n","context":"Lean Reference\u0009Tactic Proofs\u0009Tactic Reference","header":"13.5.14. Inductive Types","id":"/Tactic-Proofs/Tactic-Reference/#tactic-ref-inductive"},"/releases/v4.13.0/#The-Lean-Language-Reference--Release-Notes--Lean-4___13___0-_LPAR_2024-11-01_RPAR_--Lake":{"contents":"* Reservoir build cache. Lake will now attempt to fetch a pre-built copy of the package from Reservoir before building it. This is only enabled for packages in the leanprover or leanprover-community organizations on versions indexed by Reservoir. Users can force Lake to build packages from the source by passing --no-cache on the CLI or by setting the  LAKE_NO_CACHE environment variable to true. #5486, #5572, #5583, #5600, #5641, #5642.* #5504 lake new and lake init now produce TOML configurations by default.* #5878 fixes a serious issue where Lake would delete path dependencies when attempting to cleanup a dependency required with an incorrect name.* Breaking changes* #5641 A Lake build of target within a package will no longer build a package's dependencies package-level extra target dependencies. At the technical level, a package's extraDep facet no longer transitively builds its dependencies’ extraDep facets (which include their extraDepTargets).\n\n","context":"Lean Reference\u0009Release Notes\u0009Lean 4.13.0 (2024-11-01)","header":"Lake","id":"/releases/v4.13.0/#The-Lean-Language-Reference--Release-Notes--Lean-4___13___0-_LPAR_2024-11-01_RPAR_--Lake"},"/releases/v4.23.0/#The-Lean-Language-Reference--Release-Notes--Lean-4___23___0-_LPAR_2025-09-15_RPAR_--Highlights--Breaking-Changes":{"contents":"* #9800 improves the delta deriving handler, giving it the ability to\nprocess definitions with binders, as well as the ability to recursively\nunfold definitions. Breaking change: the\nderived instance's name uses the instance command's name generator,\nand the new instance is added to the current namespace.* #9040 improves the 'Go to Definition' UX.\nBreaking change: InfoTree.hoverableInfoAt? has been generalized to\nInfoTree.hoverableInfoAtM? and now takes a general filter argument\ninstead of several boolean flags, as was the case before.* #9594 optimizes Lean.Name.toString, giving a 10% instruction\nbenefit.Crucially this is a breaking change as the old Lean.Name.toString\nmethod used to support a method for identifying tokens. This method is\nnow available as Lean.Name.toStringWithToken in order to allow for\nspecialization of the (highly common) toString code path which sets\nthis function to just return false.* #9729 introduces a canonical way to endow a type with an order\nstructure. Breaking changes:* The requirements of the lt_of_le_of_lt/le_trans lemmas for\nVector, List and Array are simplified. They now require an\nIsLinearOrder instance. The new requirements are logically equivalent\nto the old ones, but the IsLinearOrder instance is not automatically\ninferred from the smaller typeclasses.* Hypotheses of type Std.Total (¬ · < · : α → α → Prop) are replaced\nwith the equivalent class Std.Asymm (· < · : α → α → Prop). Breakage\nshould be limited because there is now an instance that derives the\nlatter from the former.* In Init.Data.List.MinMax, multiple theorem signatures are modified,\nreplacing explicit parameters for antisymmetry, totality, min_ex_or\netc. with corresponding instance parameters.\n\n","context":"Lean Reference\u0009Release Notes\u0009Lean 4.23.0 (2025-09-15)\u0009Highlights","header":"Breaking Changes","id":"/releases/v4.23.0/#The-Lean-Language-Reference--Release-Notes--Lean-4___23___0-_LPAR_2025-09-15_RPAR_--Highlights--Breaking-Changes"}});