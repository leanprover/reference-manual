window.docContents[86].resolve({"/Build-Tools-and-Distribution/Lake/#The-Lean-Language-Reference--Build-Tools-and-Distribution--Lake--Command-Line-Interface--Development-Tools":{"contents":"Lake includes support for specifying standard development tools and workflows.\nOn the command line, these tools can be invoked using the appropriate lake subcommands.\n\n\n\n\n\n\n\n","context":"Lean Reference\u0009Build Tools\u0009Lake\u0009Command-Line Interface","header":"22.1.2.7. Development Tools","id":"/Build-Tools-and-Distribution/Lake/#The-Lean-Language-Reference--Build-Tools-and-Distribution--Lake--Command-Line-Interface--Development-Tools"},"/Build-Tools-and-Distribution/Lake/#The-Lean-Language-Reference--Build-Tools-and-Distribution--Lake--Configuration-File-Format--Lean-Format--Declarative-Fields":{"contents":"The declarative subset of the Lean configuration format uses sequences of declaration fields to specify configuration options.\n\nDeclarative FieldsA field assignment in a declarative configuration.\n\n","context":"Lean Reference\u0009Build Tools\u0009Lake\u0009Configuration File Format\u0009Lean Format","header":"22.1.3.2.1. Declarative Fields","id":"/Build-Tools-and-Distribution/Lake/#The-Lean-Language-Reference--Build-Tools-and-Distribution--Lake--Configuration-File-Format--Lean-Format--Declarative-Fields"},"/Build-Tools-and-Distribution/Lake/#The-Lean-Language-Reference--Build-Tools-and-Distribution--Lake--Configuration-File-Format--Lean-Format--Scripts":{"contents":"Lake scripts are used to automate tasks that require access to a package configuration but do not participate in incremental builds of artifacts from code.\nScripts run in the ScriptM monad, which is IO with an additional reader monad transformer that provides access to the package configuration.\nIn particular, a script should have the type List String → ScriptM UInt32.\nWorkspace information in scripts is primarily accessed via the MonadWorkspace ScriptM instance.\n\n\n\nScript DeclarationsDefine a new Lake script for the package.Example/-- Display a greeting -/\nscript «script-name» (args) do\n  if h : 0 < args.length then\n    IO.println s!\"Hello, {args[0]'h}!\"\n  else\n    IO.println \"Hello, world!\"\n  return 0\n\n\nThe type of a Script's monad.It is an IO monad equipped information about the Lake configuration.\n\nDefault ScriptsMarks a Lake script as the package's default.\n\n","context":"Lean Reference\u0009Build Tools\u0009Lake\u0009Configuration File Format\u0009Lean Format","header":"22.1.3.2.6. Scripts","id":"/Build-Tools-and-Distribution/Lake/#The-Lean-Language-Reference--Build-Tools-and-Distribution--Lake--Configuration-File-Format--Lean-Format--Scripts"},"/releases/v4.0.0-m3/#release-v4___0___0-m3":{"contents":"This is the third milestone release of Lean 4, and the last planned milestone before an official\nrelease. With almost 3000 commits improving and extending many parts of the system since the last\nmilestone, we are now close to completing all main features we have envisioned for Lean 4.\n\nContributors:\n\n$ git shortlog -s -n v4.0.0-m2..v4.0.0-m3\n  1719  Leonardo de Moura\n   725  Sebastian Ullrich\n   149  Wojciech Nawrocki\n    93  Daniel Selsam\n    82  Gabriel Ebner\n    36  Joscha\n    35  Daniel Fabian\n    21  tydeu\n    14  Mario Carneiro\n    13  larsk21\n    12  Jannis Limperg\n    11  Chris Lovett\n     8  Henrik Böving\n     4  François G. Dorais\n     4  Siddharth\n     3  Joe Hendrix\n     3  Scott Morrison\n     3  ammkrn\n     2  Josh Levine\n     2  Mac\n     2  Mac Malone\n     2  Simon Hudon\n     2  pcpthm\n     1  Anders Christiansen Sørby\n     1  Andrei Cheremskoy\n     1  Arthur Paulino\n     1  Christian Pehle\n     1  Formally Verified Waffle Maker\n     1  Hunter Monroe\n     1  Jan Hrcek\n     1  Joshua Seaton\n     1  Kevin Buzzard\n     1  Lorenz Leutgeb\n     1  Mauricio Collares\n     1  Michael Burge\n     1  Paul Brinkmeier\n     1  Reijo Jaakkola\n     1  Severen Redwood\n     1  Siddharth Bhat\n     1  Tom Ball\n     1  Varun Gandhi\n     1  WojciechKarpiel\n     1  Xavier Noria\n     1  gabriel-doriath-dohler\n     1  zygi\n     1  Бакиновский Максим\n\n\n","context":"Lean Reference\u0009Release Notes","header":"Lean 4.0.0-m3 (2022-01-31)","id":"/releases/v4.0.0-m3/#release-v4___0___0-m3"}});