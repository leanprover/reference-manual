window.docContents[38].resolve({"/Basic-Types/Bitvectors/#The-Lean-Language-Reference--Basic-Types--Bitvectors--API-Reference--Construction":{"contents":"Fills a bitvector with w copies of the bit b.\n\nReturns a bitvector of size n where all bits are 0.\n\nReturns a bitvector of size n where all bits are 1.\n\ntwoPow w i is the bitvector 2^i if i < w, and 0 otherwise. In other words, it is 2 to the\npower i.From the bitwise point of view, it has the ith bit as 1 and all other bits as 0.\n\n","context":"Lean Reference\u0009Basic Types\u0009Bitvectors\u0009API Reference","header":"19.5.5.2. Construction","id":"/Basic-Types/Bitvectors/#The-Lean-Language-Reference--Basic-Types--Bitvectors--API-Reference--Construction"},"/IO/Processes/#The-Lean-Language-Reference--IO--Processes--Current-Process":{"contents":"Returns the current working directory of the calling process.\n\nSets the current working directory of the calling process.\n\nTerminates the current process with the provided exit code. 0 indicates success, all other values\nindicate failure.\n\nReturns the process ID of the calling process.\n\n","context":"Lean Reference\u0009IO\u0009Processes","header":"15.9.1. Current Process","id":"/IO/Processes/#The-Lean-Language-Reference--IO--Processes--Current-Process"},"/releases/v4.14.0/#release-v4___14___0":{"contents":"Full Changelog: https://github.com/leanprover/lean4/compare/v4.13.0...v4.14.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","context":"Lean Reference\u0009Release Notes","header":"Lean 4.14.0 (2024-12-02)","id":"/releases/v4.14.0/#release-v4___14___0"},"/releases/v4.15.0/#The-Lean-Language-Reference--Release-Notes--Lean-4___15___0-_LPAR_2025-01-04_RPAR_--Pretty-Printing":{"contents":"* #2934 adds the option pp.parens (default: false) that causes the\npretty printer to eagerly insert parentheses, which can be useful for\nteaching and for understanding the structure of expressions. For\nexample, it causes p → q → r to pretty print as p → (q → r).* #6014 prevents Nat.succ ?_ from pretty printing as ?_.succ, which\nshould make apply? be more usable.* #6085 improves the term info for coercions marked with\nCoeFnType.coeFun (such as DFunLike.coe in Mathlib), making \"go to\ndefinition\" on the function name work. Hovering over such a coerced\nfunction will show the coercee rather than the coercion expression. The\ncoercion expression can still be seen by hovering over the whitespace in\nthe function application.* #6096 improves the #print command for structures to show all fields\nand which parents the fields were inherited from, hiding internal\ndetails such as which parents are represented as subobjects. This\ninformation is still present in the constructor if needed. The pretty\nprinter for private constants is also improved, and it now handles\nprivate names from the current module like any other name; private names\nfrom other modules are made hygienic.* #6119 adds a new delab option pp.coercions.types which, when\nenabled, will display all coercions with an explicit type ascription.* #6161 ensures whitespace is printed before +opt and -opt\nconfiguration options when pretty printing, improving the experience of\ntactics such as simp?.* #6181 fixes a bug where the signature pretty printer would ignore the\ncurrent setting of pp.raw. This fixes an issue where #check ident\nwould not heed pp.raw. Closes #6090.* #6213 exposes the difference in \"synthesized type class instance is\nnot definitionally equal\" errors.\n\n","context":"Lean Reference\u0009Release Notes\u0009Lean 4.15.0 (2025-01-04)","header":"Pretty Printing","id":"/releases/v4.15.0/#The-Lean-Language-Reference--Release-Notes--Lean-4___15___0-_LPAR_2025-01-04_RPAR_--Pretty-Printing"},"/releases/v4.21.0/#The-Lean-Language-Reference--Release-Notes--Lean-4___21___0-_LPAR_2025-06-30_RPAR_--Other":{"contents":"* #8192 includes upgrades to the release_checklist.py script prepared\nwhile releasing v4.20.0-rc1.* #8366 adds the expose attribute to Ordering.then. This is required\nfor building with the new compiler, but works fine with the old compiler\nbecause it silently ignores the missing definition.\n\n","context":"Lean Reference\u0009Release Notes\u0009Lean 4.21.0 (2025-06-30)","header":"Other","id":"/releases/v4.21.0/#The-Lean-Language-Reference--Release-Notes--Lean-4___21___0-_LPAR_2025-06-30_RPAR_--Other"},"/releases/v4.23.0/#release-v4___23___0":{"contents":"For this release, 610 changes landed. In addition to the 95 feature additions and 139 fixes listed below there were 61 refactoring changes, 12 documentation improvements, 71 performance improvements, and 232 other changes.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","context":"Lean Reference\u0009Release Notes","header":"Lean 4.23.0 (2025-09-15)","id":"/releases/v4.23.0/#release-v4___23___0"}});