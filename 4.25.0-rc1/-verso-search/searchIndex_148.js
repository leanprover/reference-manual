window.docContents[148].resolve({"/Interacting-with-Lean/#format-brackets":{"contents":"These operators make it easier to achieve a consistent parenthesization style.\n\nCreates a format l ++ f ++ r with a flattening group, nesting the contents by the length of l.The group's FlattenBehavior is allOrNone; for fill use Std.Format.bracketFill.\n\nCreates the format \"[\" ++ f ++ \"]\" with a flattening group, nesting by one space.sbracket is short for “square bracket”.\n\nCreates the format \"(\" ++ f ++ \")\" with a flattening group, nesting by one space.\n\nCreates a format l ++ f ++ r with a flattening group, nesting the contents by the length of l.The group's FlattenBehavior is fill; for allOrNone use Std.Format.bracketFill.\n\n","context":"Lean Reference\u0009Interacting with Lean\u0009Formatted Output\u0009Format","header":"3.7.1.5. Brackets and Parentheses","id":"/Interacting-with-Lean/#format-brackets"},"/releases/v4.25.0/#The-Lean-Language-Reference--Release-Notes--Lean-4___25___0-rc1-_LPAR_2025-10-20_RPAR_--Compiler":{"contents":"* #10429 fixes and overeager reuse of specialisation in the code\ngenerator.* #10444 fixes an overeager insertion of inc operations for large uint\nconstants.* #10488 changes the way that scientific numerals are parsed in order to\ngive better error messages for (invalid) syntax like 32.succ.* #10495 fixes constant folding for UIntX in the code generator. This\noptimization was previously simply dead code due to the way that uint\nliterals are encoded.* #10610 ensures that even if a type is marked as irreducible the\ncompiler can see through it in\norder to discover functions hidden behind type aliases.* #10626 reduces the aggressiveness of the dead let eliminator from\nlambda RC.* #10689 fixes an oversight in the RC insertion phase in the code\ngenerator.\n\n","context":"Lean Reference\u0009Release Notes\u0009Lean 4.25.0-rc1 (2025-10-20)","header":"Compiler","id":"/releases/v4.25.0/#The-Lean-Language-Reference--Release-Notes--Lean-4___25___0-rc1-_LPAR_2025-10-20_RPAR_--Compiler"}});